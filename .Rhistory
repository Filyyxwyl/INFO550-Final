fit_infant9_slope <- update(fit_infant9_full, . ~ . - (1|Unique_ID))
fit_infant9 <- update(fit_infant9_full, . ~ . - (0 + Corr_age8|Unique_ID))
exactRLRT(fit_infant9_slope,fit_infant9_full,fit_infant9)
getwd()
fit7 = glmer(ChlamydiaCases~offset(logpop)+(1|Geography)+YearC+Perc_HH_PovertyC,family=poisson,data=chdat，nAGQ=100)
library(lme4)
wheeze <- read.csv("canadawheeze.csv")
wheeze$ageC = scale(wheeze$age,center=TRUE,scale=FALSE)
fit1 = glmer(whz~city+smk+ageC+ageC*smk+(1|id),family=binomial,data=wheeze)
summary(fit1)
fit2 = glmer(whz~city+smk+ageC+ageC*smk+(1|id),family=binomial,data=wheeze,nAGQ=50)
summary(fit2)
fit3 = glmer(whz~city+factor(smk)+ageC+ageC*factor(smk)+(1|id),family=binomial,data=wheeze,nAGQ=50)
summary(fit3)
chdat = read.csv('chlamydia_cases_hhpov.csv',head=TRUE)
str(chdat)
chdat$ChlamydiaCases = as.numeric(as.character(gsub(",", "", chdat$ChlamydiaCases)))
chdat$Population = as.numeric(as.character(gsub(",", "", chdat$Population)))
chdat$HH_Poverty = as.numeric(as.character(gsub(",", "", chdat$HH_Poverty)))
chdat$logpop = log(chdat$Population)
fit5 = glmer(ChlamydiaCases~offset(logpop)+(1|Geography)+Year+Perc_HH_Poverty,family=poisson,data=chdat)
chdat$YearC = scale(chdat$Year,center=FALSE,scale=TRUE)
chdat$Perc_HH_PovertyC = scale(chdat$Perc_HH_Poverty,center=FALSE,scale=TRUE)
fit6 = glmer(ChlamydiaCases~offset(logpop)+(1|Geography)+YearC+Perc_HH_PovertyC,family=poisson,data=chdat)
fit7 = glmer(ChlamydiaCases~offset(logpop)+(1|Geography)+YearC+Perc_HH_PovertyC,family=poisson,data=chdat，nAGQ=100)
fit7 = glmer(ChlamydiaCases~offset(logpop)+(1|Geography)+YearC+Perc_HH_PovertyC,family=poisson,data=chdat,nAGQ=100)
fit7 = glmer(ChlamydiaCases~offset(logpop)+(1|Geography)+YearC+Perc_HH_PovertyC,family=poisson,data=chdat,nAGQ=100)
summary(fit7)
chdat$YearC = scale(chdat$Year,center=FALSE,scale=TRUE)
chdat$Perc_HH_PovertyC = scale(chdat$Perc_HH_Poverty,center=FALSE,scale=TRUE)
fit6 = glmer(ChlamydiaCases~offset(logpop)+(1|Geography)+YearC+Perc_HH_PovertyC,family=poisson,data=chdat)
summary(fit6)
chdat = read.csv('chlamydia_cases_hhpov.csv',head=TRUE)
str(chdat)
chdat$ChlamydiaCases = as.numeric(as.character(gsub(",", "", chdat$ChlamydiaCases)))
chdat$Population = as.numeric(as.character(gsub(",", "", chdat$Population)))
chdat$HH_Poverty = as.numeric(as.character(gsub(",", "", chdat$HH_Poverty)))
chdat$logpop = log(chdat$Population)
fit5 = glmer(ChlamydiaCases~offset(logpop)+(1|Geography)+Year+Perc_HH_Poverty,family=poisson,data=chdat)
chdat$YearC = scale(chdat$Year,center=FALSE,scale=TRUE)
chdat$Perc_HH_PovertyC = scale(chdat$Perc_HH_Poverty,center=FALSE,scale=TRUE)
fit6 = glmer(ChlamydiaCases~offset(logpop)+(1|Geography)+YearC+Perc_HH_PovertyC,family=poisson,data=chdat)
summary(fit6)
fit7 = glmer(ChlamydiaCases~offset(logpop)+(1|Geography)+YearC+Perc_HH_PovertyC,family=poisson,data=chdat,nAGQ=100)
summary(fit7)
miu <- fitted(fit7)
pearson <- (chdat$ChlamydiaCases-miu)/miu
plot(miu,pearson)
plot(fit7)
library(lattice)
#fitted vs. residual plots
plot(fit7 , type = c("p", "smooth"))
#scale-location plots
plot(cases.fit3, sqrt(abs(resid(.))) ~ fitted(.), type = c("p", "smooth"))
#scale-location plots
plot(fit7, sqrt(abs(resid(.))) ~ fitted(.), type = c("p", "smooth"))
# quantile-quantile plots
qqmath(fit7, id = 0.05)
library(influence.ME)
estex.m23 <- influence(fit7, "Geography")
plot(estex.m23, which="cook",
cutoff=4/length(unique(chdat$Geography)), sort=TRUE,
xlab="Cook´s Distance",
ylab="Geography")
# https://bbolker.github.io/mixedmodels-misc/glmmFAQ.html#overdispersion
# caveats: expected counts per obs should be > 5
overdisp_fun <- function(model) {
rdf <- df.residual(model)
rp <- residuals(model,type="pearson")
Pearson.chisq <- sum(rp^2)
prat <- Pearson.chisq/rdf
pval <- pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE)
c(chisq=Pearson.chisq,ratio=prat,rdf=rdf,p=pval)
}
overdisp_fun(fit7)
fitted(fit7)
# https://bbolker.github.io/mixedmodels-misc/glmmFAQ.html#overdispersion
# caveats: expected counts per obs should be > 5
overdisp_fun <- function(model) {
rdf <- df.residual(model)
rp <- residuals(model,type="pearson")
Pearson.chisq <- sum(rp^2)
prat <- Pearson.chisq/rdf
pval <- pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE)
c(chisq=Pearson.chisq,ratio=prat,rdf=rdf,p=pval)
}
overdisp_fun(fit7)
plot(fit7)
# https://bbolker.github.io/mixedmodels-misc/glmmFAQ.html#overdispersion
# caveats: expected counts per obs should be > 5
overdisp_fun <- function(model) {
rdf <- df.residual(model)
rp <- residuals(model,type="pearson")
Pearson.chisq <- sum(rp^2)
prat <- Pearson.chisq/rdf
pval <- pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE)
c(chisq=Pearson.chisq,ratio=prat,rdf=rdf,p=pval)
}
overdisp_fun(fit7)
fit8 = glmer(log(ChlamydiaCases/Population)~(1|Geography)+YearC+Perc_HH_PovertyC,family=poisson,data=chdat)
fit8 = lmer(log(ChlamydiaCases/Population)~(1|Geography)+YearC+Perc_HH_PovertyC,data=chdat)
summary(fit8)
library(lme4)
wheeze = read.csv('canadawheeze.csv',head=TRUE)
library(lme4)
wheeze <- read.csv("canadawheeze.csv")
wheeze$ageC = scale(wheeze$age,center=TRUE,scale=FALSE)
fit1 = glmer(whz~city+smk+ageC+ageC*smk+(1|id),family=binomial,data=wheeze)
summary(fit1)
library(lme4)
wheeze <- read.csv("canadawheeze.csv")
wheeze$ageC = scale(wheeze$age,center=TRUE,scale=FALSE)
fit1 = glmer(whz~factor(city)+smk+ageC+ageC*smk+(1|id),family=binomial(link="logit"),data=wheeze)
summary(fit1)
fit2 = glmer(whz~factor(city)+smk+ageC+ageC*smk+(1|id),family=binomial(link='logit'),data=wheeze,nAGQ=50)
summary(fit2)
odds_ratio = exp((12-9)*(-0.7025)+(2-0)*0.4156+((12-10.5)*2-(9-10.5)*0)*0.5006)
odds_ratio = exp((12-9)*(-0.7025)+(2-0)*0.4156+((12-10.5)*2-(9-10.5)*0)*0.5006)
odds_ratio
fit3 = glmer(whz~city+factor(smk)+ageC+ageC*factor(smk)+(1|id),family=binomial,data=wheeze,nAGQ=50)
summary(fit3)
fit3 = glmer(whz~factor(city)+factor(smk)+ageC+ageC*factor(smk)+(1|id),family=binomial(link='logit'),data=wheeze,nAGQ=50)
summary(fit3)
chdat = read.csv('chlamydia_cases_hhpov.csv',head=TRUE)
str(chdat)
chdat$ChlamydiaCases = as.numeric(as.character(gsub(",", "", chdat$ChlamydiaCases)))
chdat$Population = as.numeric(as.character(gsub(",", "", chdat$Population)))
chdat$HH_Poverty = as.numeric(as.character(gsub(",", "", chdat$HH_Poverty)))
chdat$logpop = log(chdat$Population)
fit5 = glmer(ChlamydiaCases~offset(logpop)+(1|Geography)+Year+Perc_HH_Poverty,family=poisson,data=chdat)
summary(fit5)
chdat$YearC = scale(chdat$Year,center=TRUE,scale=TRUE)
chdat$Perc_HH_PovertyC = scale(chdat$Perc_HH_Poverty,center=FALSE,scale=TRUE)
fit6 = glmer(ChlamydiaCases~offset(logpop)+(1|Geography)+YearC+Perc_HH_PovertyC,family=poisson,data=chdat)
summary(fit6)
fit7 = glmer(ChlamydiaCases~offset(logpop)+(1|Geography)+YearC+Perc_HH_PovertyC,family=poisson,data=chdat,nAGQ=100)
summary(fit7)
miu_hat <- fitted(fit7)
pearson <- (chdat$ChlamydiaCases-miu_hat)/sqrt(miu_hat)
plot(miu_hat,pearson)
plot(fit7)
library(lattice)
#fitted vs. residual plots
plot(fit7 , type = c("p", "smooth"))
#scale-location plots
plot(fit7, sqrt(abs(resid(.))) ~ fitted(.), type = c("p", "smooth"))
# quantile-quantile plots
qqmath(fit7)
library(influence.ME)
estex.m23 <- influence(fit7, "Geography")
plot(estex.m23, which="cook",
cutoff=4/length(unique(chdat$Geography)), sort=TRUE,
xlab="Cook´s Distance",
ylab="Geography")
# https://bbolker.github.io/mixedmodels-misc/glmmFAQ.html#overdispersion
# caveats: expected counts per obs should be > 5
overdisp_fun <- function(model) {
rdf <- df.residual(model)
rp <- residuals(model,type="pearson")
Pearson.chisq <- sum(rp^2)
prat <- Pearson.chisq/rdf
pval <- pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE)
c(chisq=Pearson.chisq,ratio=prat,rdf=rdf,p=pval)
}
overdisp_fun(fit7)
exp(2*-0.0796214)-1
lower = exp(2*(-0.0796215-1.96*0.0015012))-1
upper = exp(2*(-0.0796215+1.96*0.0015012))-1
lower
upper
fit8 = lmer(log(ChlamydiaCases/Population)~(1|Geography)+YearC+Perc_HH_PovertyC,data=chdat)
summary(fit8)
library(lattice)
plot(fit8, type = c("p", "smooth"))
plot(fit8, sqrt(abs(resid(.))) ~ fitted(.), type = c("p", "smooth"))
qqmath(fit4)
qqmath(fit8)
library(influence.ME)
estex.m23 <- influence(fit8, "Geography")
plot(estex.m23, which="cook",
cutoff=4/length(unique(chdat$Geography), sort=TRUE,
xlab="Cook´s Distance",
ylab="Geography")
library(influence.ME)
estex.m23 <- influence(cases.fit4, "Geography")
library(influence.ME)
estex.m23 <- influence(cases.fit8, "Geography")
library(influence.ME)
estex.m23 <- influence(fit8, "Geography")
plot(estex.m23, which="cook",
cutoff=4/length(unique(chdat$Geography)), sort=TRUE,
xlab="Cook´s Distance",
ylab="Geography")
exp(2*(-0.035841))-1
lower = exp(2*(-0.035841-1.96*0.013715))-1
upper = exp(2*(-0.035841+1.96*0.013715))-1
lower
upper
set.seed(123) # zeros make this demo annoying, this seed works
lambda=10
y = rpois(1000,lambda)
summary(glm(y~1,family=poisson))
log(lambda) # glm is equal to log(lambda), the true parameter value
coef(lm(log(y)~1))
SE=sqrt{9*0.120207886+4*0.09640003+9*0.08119575+12*(-0.02917017)+18*(-0.08267761)+12*0.01665102}
SE=sqrt(9*0.120207886+4*0.09640003+9*0.08119575+12*(-0.02917017)+18*(-0.08267761)+12*0.01665102)
SE=sqrt(9*0.120207886+4*0.09640003+9*0.08119575+12*(-0.02917017)+18*(-0.08267761)+12*0.01665102)
SE
SE=sqrt(9*0.120207886+4*0.09640003+9*0.08119575+12*(-0.02917017)+18*(-0.08267761)+12*0.01665102)
lower = exp(0.2255-1.96*SE)
upper = exp(0.2255+1.96*SE)
lower
upper
library(tidyverse)
library(sf)
install.packages("mapview")
library(tidyverse)
library(sf)
library(mapview)
smell <- read_csv("/Users/filyyxwy/Desktop/Capstone/smell/smell_reports_Pitt.csv")
smell %>%
glimpse()
mapview(smell, xcol = "longitude", ycol = "latitude", crs = 4269, grid = FALSE)
mapview(smell, xcol = "longitude", ycol = "latitude", crs = 4269, grid = FALSE,legend = mapviewGetOption("legend"))
mapview(smell, xcol = "longitude", ycol = "latitude", crs = 4260, grid = FALSE)
mapview(smell, xcol = "longitude", ycol = "latitude", crs = 4269, grid = FALSE)
mapview(smell, xcol = "longitude", ycol = "latitude", crs = 4269, grid = FALSE,col = "transparent")
mapview(smell, xcol = "longitude", ycol = "latitude", crs = 4269, grid = FALSE,col.regions = my.palette)
my.palette <- brewer.pal(n = 5, name = "OrRd")
install.packages("RColorBrewer")
install.packages("RColorBrewer")
library(brewer.pal)
library(brewer)
mapview(smell, xcol = "longitude", ycol = "latitude", crs = 4269, grid = FALSE)
mapview(smell, xcol = "longitude", ycol = "latitude", crs = 4269, grid = FALSE)
library(tidyverse)
library(sf)
library(mapview)
smell <- read_csv("/Users/filyyxwy/Desktop/Capstone/smell/smell_reports_Pitt.csv")
smell <- read_csv("/Users/filyyxwy/Desktop/Capstone/smell/smell_reports_Pitt.csv")
smell %>%
glimpse()
mapview(smell, xcol = "longitude", ycol = "latitude", crs = 4269, grid = FALSE)
mapview(smell, xcol = "longitude", ycol = "latitude", crs = 4269, grid = FALSE,zcol = "unemployment_rate")
mapview(smell, xcol = "longitude", ycol = "latitude", crs = 4269, grid = FALSE,zcol = "value")
mycolor <- magma(n = length(unique(smell$value)), direction = -1)
library(tidyverse)
# for loading our data
library(sf)
# for plotting
library(lattice)
library(leafpop)
library(mapview)
library(vapoRwave)
install.packages(vapoRwave)
install.packages("remotes")
library(vapoRwave)
library("vapoRwave")
install.packages("remotes")
remotes::install_github("moldach/vapoRwave")
library(vapoRwave)
library(tidyverse)
# for loading our data
library(sf)
# for plotting
library(lattice)
library(leafpop)
library(mapview)
library(vapoRwave)
library(viridis)
mycolor <- magma(n = length(unique(smell$value)), direction = -1)
mapview(smell, xcol = "longitude", ycol = "latitude", crs = 4269, grid = FALSE,zcol = "value", col.regions = mycolor)
smell <- read_csv("/Users/filyyxwy/Desktop/Capstone/smell/smell_reports_Pitt.csv")
smell %>%
glimpse()
A <- matrix(1,2,3)
A <- c(1,2,3)
B <- c(4,5,6)
c <- c(A,B)
c.matrix <- matrix(c)
c
c.matrix <- matrix(c,nrow=2)
c
c.matrix <- matrix(c,byrow=T,nrow=2)
c
A <- c(1,2,3)
B <- c(4,5,6)
ab<-rbine(A)
A <- c(1,2,3)
B <- c(4,5,6)
rbind(A,B)
v <- 1:9
matrix(v,nrow=3)
v <- 1:9
mat <- matrix(v,nrow=3)
is.matrix(mat)
mat2 <- matrix(1:25,nrow=5,byrow=TRUE)
mat
mat2 <- matrix(1:25,nrow=5,byrow=TRUE)
mat2
mat <- matrix(1:9,nrow=3)
mat
mat[2:3,2:3]
mat2[2:3,2:3]
mat2[4:5,4:5]
sum(mat2)
matrix(runif(20),nrow=4)
library(tidyverse)
# for loading our data
library(sf)
# for plotting
library(lattice)
library(leafpop)
library(mapview)
library(vapoRwave)
library(viridis)
smell <- read_csv("/Users/filyyxwy/Desktop/Capstone/smell/smell_reports_Pitt.csv")
smell %>%
glimpse()
# making a map
mycolor <- magma(n = length(unique(smell$value)), direction = -1)
mapview(smell, xcol = "longitude", ycol = "latitude", crs = 4269, grid = FALSE,zcol = "value", col.regions = mycolor)
library(dplyr)
# # of "smell_description" based on the values of column "value"
smell %>%
group_by(value) %>%
summarise(smell_description = n())->total_num
# # of NA of "smell_description" column based on the values of column "value"
smell %>%
filter(is.na(smell_description)) %>%
group_by(value) %>%
summarise(n=n())->null_num
# the proportion of "smell_description" based on the values of column "value"
1-(null_num[,2]/total_num[,2])
head(smell)
# making a map
mycolor <- magma(n = length(unique(smell$value)), direction = -1)
mapview(smell, xcol = "longitude", ycol = "latitude", crs = 4269, grid = FALSE,zcol = "value", col.regions = mycolor,cex=0.3)
# making a map
mycolor <- magma(n = length(unique(smell$value)), direction = -1)
mapview(smell, xcol = "longitude", ycol = "latitude", crs = 4269, grid = FALSE,zcol = "value", col.regions = mycolor,cex=0.6)
# making a map
mycolor <- magma(n = length(unique(smell$value)), direction = -1)
mapview(smell, xcol = "longitude", ycol = "latitude", crs = 4269, grid = FALSE,zcol = "value", col.regions = mycolor,cex=2.0)
# making a map
mycolor <- magma(n = length(unique(smell$value)), direction = -1)
mapview(smell, xcol = "longitude", ycol = "latitude", crs = 4269, grid = FALSE,zcol = "value", col.regions = mycolor,cex=4.0)
install.packages('geepack')
library(gee)
install.packages('geelm')
library(gee)
install.packages(gee)
install.packages('gee')
library(gee)
pd = read.csv('parkinsons_dbs.csv',stringsAsFactors = TRUE)
pd = read.csv('parkinsons_dbs.csv',stringsAsFactors = TRUE)
pd = read.csv('parkinsons_dbs.csv',stringsAsFactors = TRUE)
library(gee)
pd$Analysis.code <- sort(pd$Analysis.code)
fit = gee(ledd~Group+Timepoint+Group*Timepoint+Target+Age+factor(Gender),data=pd, corstr="exchange")
library(gee)
pd$Analysis.code <- sort(pd$Analysis.code)
fit = gee(ledd~Group+Timepoint+Group*Timepoint+Target+Age+factor(Gender),id=Analysis.code, data=pd, corstr="exchange")
library(gee)
pd$Analysis.code <- sort(pd$Analysis.code)
fit = gee(ledd~Group+Timepoint+Group*Timepoint+Target+Age+factor(Gender),id=Analysis.code, data=pd, corstr="exchangeable")
setwd("/Users/filyyxwy/Desktop/2022fall/info550-DS_Toolkit/week4/assignment_project/archive (1)")
data = read.csv ("world_population.csv")
head(data)
data_1 <- data %>%
group_by(Continent)%>%
summarize("2020"=sum(X2020.Population),"2015"=sum(X2015.Population),"2010"=sum(X2010.Population),"2000"=sum(X2000.Population),"1990"=sum(X1990.Population),"1980"=sum(X1980.Population),"1970"=sum(X1970.Population),"Area (km²)"=sum(Area..km..),"Density (per km²)"=sum(Density..per.km..),"Growth Rate"=sum(Growth.Rate),"World Population Percentage"=sum(World.Population.Percentage))
library(tidyverse)
library(labelled)
library(gtsummary)
library(dplyr)
data_1 <- data %>%
group_by(Continent)%>%
summarize("2020"=sum(X2020.Population),"2015"=sum(X2015.Population),"2010"=sum(X2010.Population),"2000"=sum(X2000.Population),"1990"=sum(X1990.Population),"1980"=sum(X1980.Population),"1970"=sum(X1970.Population),"Area (km²)"=sum(Area..km..),"Density (per km²)"=sum(Density..per.km..),"Growth Rate"=sum(Growth.Rate),"World Population Percentage"=sum(World.Population.Percentage))
knitr::kable(data_1,"simple")
getwd()
setwd("/Users/filyyxwy/Desktop/2022fall/info550-DS_Toolkit/week9/Final_project/")
here::i_am("code/table1")
library(tidyverse)
library(labelled)
library(gtsummary)
library(dplyr)
setwd("/Users/filyyxwy/Desktop/2022fall/info550-DS_Toolkit/week9/Final_project")
data = read.csv ("world_population.csv")
data_1 <- data %>%
group_by(Continent)%>%
summarize("2020"=sum(X2020.Population),"2015"=sum(X2015.Population),"2010"=sum(X2010.Population),"2000"=sum(X2000.Population),"1990"=sum(X1990.Population),"1980"=sum(X1980.Population),"1970"=sum(X1970.Population),"Area (km²)"=sum(Area..km..),"Density (per km²)"=sum(Density..per.km..),"Growth Rate"=sum(Growth.Rate),"World Population Percentage"=sum(World.Population.Percentage))
knitr::kable(data_1,"simple")->table1
saveRDS(table1,file = here::here("output/table1"))
saveRDS(table1,file = here::here(output/table1.rds))
saveRDS(table1,file = here::here("output/table1.rds"))
here::i_am("code/table1")
saveRDS(table1,file = here::here("output/table1.rds"))
here::i_am("code/table1")
here::i_am("code/table1")
library(tidyverse)
library(labelled)
library(gtsummary)
library(dplyr)
setwd("/Users/filyyxwy/Desktop/2022fall/info550-DS_Toolkit/week9/Final_project")
data = read.csv ("world_population.csv")
data_1 <- data %>%
group_by(Continent)%>%
summarize("2020"=sum(X2020.Population),"2015"=sum(X2015.Population),"2010"=sum(X2010.Population),"2000"=sum(X2000.Population),"1990"=sum(X1990.Population),"1980"=sum(X1980.Population),"1970"=sum(X1970.Population),"Area (km²)"=sum(Area..km..),"Density (per km²)"=sum(Density..per.km..),"Growth Rate"=sum(Growth.Rate),"World Population Percentage"=sum(World.Population.Percentage))
knitr::kable(data_1,"simple")->table1
saveRDS(table1,file = here::here("output/table1.rds"))
here::i_am("code/table1.R")
library(tidyverse)
library(labelled)
library(gtsummary)
library(dplyr)
setwd("/Users/filyyxwy/Desktop/2022fall/info550-DS_Toolkit/week9/Final_project")
data = read.csv ("world_population.csv")
data_1 <- data %>%
group_by(Continent)%>%
summarize("2020"=sum(X2020.Population),"2015"=sum(X2015.Population),"2010"=sum(X2010.Population),"2000"=sum(X2000.Population),"1990"=sum(X1990.Population),"1980"=sum(X1980.Population),"1970"=sum(X1970.Population),"Area (km²)"=sum(Area..km..),"Density (per km²)"=sum(Density..per.km..),"Growth Rate"=sum(Growth.Rate),"World Population Percentage"=sum(World.Population.Percentage))
knitr::kable(data_1,"simple")->table1
saveRDS(table1,file = here::here("output/table1.rds"))
here::i_am("code/plot1.R")
library(tidyverse)
library(labelled)
library(gtsummary)
library(dplyr)
setwd("/Users/filyyxwy/Desktop/2022fall/info550-DS_Toolkit/week4/assignment_project/archive (1)")
data = read.csv ("world_population.csv")
data_1 <- data %>%
group_by(Continent)%>%
summarize("2020"=sum(X2020.Population),"2015"=sum(X2015.Population),"2010"=sum(X2010.Population),"2000"=sum(X2000.Population),"1990"=sum(X1990.Population),"1980"=sum(X1980.Population),"1970"=sum(X1970.Population),"Area (km²)"=sum(Area..km..),"Density (per km²)"=sum(Density..per.km..),"Growth Rate"=sum(Growth.Rate),"World Population Percentage"=sum(World.Population.Percentage))
data_1 %>%
pivot_longer(c(`1970`,`1980`,`1990`,`2000`,`2010`,`2015`,`2020`), names_to = "year", values_to = "population")->figure_data
ggplot(data=figure_data)+
geom_line(aes(x=year,y=population,group = Continent,color = Continent)) -> plot1
ggsave(
here::here("output/plot1.png"),
plot=plot1,
device = "png"
)
here::i_am("final.Rmd")
read_rds(here::here("output/table1.R"))
here::i_am("final.Rmd")
library(tidyverse)
library(labelled)
library(gtsummary)
library(dplyr)
read_rds(here::here("output/table1.R"))
read_rds(here::here("output/table1.rds"))
#| fig.align = "center",
#| out.width = "100px"
knitr::include_graphics(
here::here("output/plot1.png")
)
here::i_am("code/render.R")
library(rmarkdown)
# rendering a report in production mode
# save this file with a particular file anme
render(
"final.Rmd",
output_file = here::here("report_final.html")
)
# rendering a report in production mode
# save this file with a particular file anme
render(
final.Rmd,
output_file = here::here("report_final.html")
)
# rendering a report in production mode
# save this file with a particular file anme
render(
"final.Rmd",
output_file = here::here("report_final.html")
)
here::i_am("code/render.R")
library(rmarkdown)
# rendering a report in production mode
# save this file with a particular file anme
render(
"final.Rmd",
output_file = here::here("report_final.html")
)
here::i_am("code/render.R")
setwd("/Users/filyyxwy/Desktop/2022fall/info550-DS_Toolkit/week9/Final_project")
here::i_am("code/render.R")
library(rmarkdown)
# rendering a report in production mode
# save this file with a particular file anme
render(
"final.Rmd",
output_file = here::here("report_final.html")
)
here::i_am("code/plot1.R")
library(tidyverse)
library(labelled)
library(gtsummary)
library(dplyr)
data = read.csv ("world_population.csv")
data_1 <- data %>%
group_by(Continent)%>%
summarize("2020"=sum(X2020.Population),"2015"=sum(X2015.Population),"2010"=sum(X2010.Population),"2000"=sum(X2000.Population),"1990"=sum(X1990.Population),"1980"=sum(X1980.Population),"1970"=sum(X1970.Population),"Area (km²)"=sum(Area..km..),"Density (per km²)"=sum(Density..per.km..),"Growth Rate"=sum(Growth.Rate),"World Population Percentage"=sum(World.Population.Percentage))
data_1 %>%
pivot_longer(c(`1970`,`1980`,`1990`,`2000`,`2010`,`2015`,`2020`), names_to = "year", values_to = "population")->figure_data
ggplot(data=figure_data)+
geom_line(aes(x=year,y=population,group = Continent,color = Continent)) -> plot1
ggsave(
here::here("output/plot1.png"),
plot=plot1,
device = "png"
)
